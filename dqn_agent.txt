            env = make_env(args.env)
            agent = DQNAgent(gamma=args.gamma,
                             epsilonMax=args.epsMax,
                             epsilonMin=args.epsMin,
                             epsilonDec=args.epsDec,
                             learnRate=args.learnRate,
                             inputDim=env.observation_space.shape,
                             numActions=env.action_space.n,
                             replayMemoryBufferSize=args.memSize,
                             replayMemoryBatchSize=args.batchSize,
                             targetNetworkUpdateInterval=args.replaceInterval,
                             networkSavePath=args.path,
                             evaluationName="eval",
                             networkName="DQN")

            if args.loadModel:
                agent.loadModel()

            scoreList, epsilonList, stepList = trainAgent(agent, env, args.numEpisodes, saveAgent=True, trainMode=True)
            plotLearnCurve(episodes=args.numEpisodes, scores=scoreList, epsilons=epsilonList, filename="./plots/DQN" + args.evalName)